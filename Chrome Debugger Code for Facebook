/////////////   Chrome Debugger => Ctrl+Shift+P or Run Command => type "emfo" Make sure it says "Emulate a focused page" this is also under the Rendering tab at the bottom
//https://stackoverflow.com/questions/28963272/how-can-i-inspect-html-element-that-disappears-from-dom-on-lost-focus


//    Get Page Likes and copy to clipboard and stop at last name (you have to give it a name) MAKE SURE "Rendering Emulate a focused page" is enable! LINE 1
const lastperson=window.prompt("Paste most recent name in sheet");
var names="";
var length=0;
for(var i of document.querySelectorAll('[class="_3cb8"]')){
    if(i.outerText.includes(lastperson)){
        break;
    }
    length++;
    names=names+i.outerText+"\t"+i.href+"\n";
}
const type = 'text/plain';
const blob = new Blob([names], { type });
const cbi = new ClipboardItem({
    [type]: blob
});
navigator.clipboard.write([cbi]);
console.log(names);
console.log(length);


//    Get names of post reactions, and stop at last person
const lastperson=window.prompt("Paste most recent name in sheet");
const linkcutoff = /\?_|\?comment|\&_|\&comment/
var names="";
var length=0;
function backupurl() {
    for(var j of document.querySelectorAll('[class="oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gpro0wi8 oo9gr5id lrazzd5p"]')) {
        if(j.outerText.includes(i.ariaLabel)) {
            names=names+i.ariaLabel+"\t\t"+j.href.split(linkcutoff)[0]+"\n";
        }
    }
}
function profiles() {
    if(!i.href.includes("stories")){
        names=names+i.ariaLabel+"\t\t"+i.href.split(linkcutoff)[0]+"\n";
    }
    else {
        backupurl();
    }
}
function getnames() {
    if(!i.ariaLabel.includes("Talk of Christ in Southern Colorado")){
        profiles();
        length++
    }
}
for(var i of document.querySelectorAll('[class="oajrlxb2 gs1a9yip g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 mg4g778l pfnyh3mw p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb n00je7tq arfg74bv qs9ysxi8 k77z8yql btwxx1t3 abiwlrkh p8dawk7l lzcic4wl oo9gr5id q9uorilb"]')) {
    if(i.ariaLabel.includes(lastperson)){
        break;
    }
    getnames();
}
const type = 'text/plain';
const blob = new Blob([names], { type });
const cbi = new ClipboardItem({
    [type]: blob
});
navigator.clipboard.write([cbi]);
console.log(names);
console.log(length);


//   Get profiles how have commented and comment link (sadly the link doesn't always work) 
var profiles="";
var length=0;
function main() {
    const allComments=document.querySelectorAll('[class="rj1gh0hx buofh1pr ni8dbmo4 stjgntxs hv4rvrfc"]');
    const lastperson=window.prompt("Paste moset recent name in sheet");
    function isCommentEdited(comment) {
        return /Edited/.test(comment.lastElementChild.lastElementChild.outerText);
    }
    function getChildren(object,childrenNum) {
        var obj=object;
        for(var i=0;i<childrenNum;i++) {
            obj=obj.firstElementChild;
        }
        return obj;
    }
    var getCommentData = function(name,comment,txt) {
        var array=[
            name.outerText,
            name.href.split(/\?_|\?comment|\&_|\&comment/)[0],
            txt,
            comment.outerText.split("\n")[1]
        ]
        return array.join("\t")+"\n";
    }
    for (var i of allComments) {
        /*if (getChildren(i,2) === null) {
            continue;
        }*/
        //breaks loop at most recent name already in sheet
        if (getChildren(i,8).outerText.includes(lastperson)) {
            break;
        }
        //gets correct comment id link based on whether it was edited or not
        if (isCommentEdited(i)) {
            var secondLast=i.lastElementChild.children.length-2;
            var a=i.lastElementChild.children[secondLast];
        } else {
            var a=i.lastElementChild.lastElementChild;
        }
        var commentIdLink=a.children[1].href.split(/\&__cft/)[0];
        //comments differ, some are 6 children while others are 8 children deep
        if (getChildren(i,6).href !== undefined) {
            profiles+=getCommentData(getChildren(i,6),getChildren(i,4),commentIdLink);
            length++;
        } else if (getChildren(i,8).href !== undefined) {
            profiles+=getCommentData(getChildren(i,8),getChildren(i,6),commentIdLink);
            length++;
        }
    }
}
main();
const type = 'text/plain';
const blob = new Blob([profiles], { type });
const cbi = new ClipboardItem({ [type]: blob });
navigator.clipboard.write([cbi]);
console.log(profiles);
console.log(length);


//    List friends' names (I use it to get recent friends' names) and copy them to clipboard! MAKE SURE "Rendering Emulate a focused page" is enable! LINE 1 up above
length="";
names="";
for(var i of document.querySelectorAll('[class="d2edcug0 hpfvmrgz qv66sw1b c1et5uql lr9zc1uh a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb mdeji52x a5q79mjw g1cxx5fr lrazzd5p oo9gr5id"]')){
  length++;names=names+"\n"+i.outerText;
};
console.log(length);
console.log(names);


//	  Highlight those who have more than x mutual friends (x is 10 currently) and updates every 300 miliseconds; Light green highlight hex #bfd; Pink highlight #f0f
setInterval(()=>{for(var i of Array.from(document.querySelectorAll('[class="'+document.querySelector('[role="banner"]').firstChild.firstChild.firstChild.classList.value+'"]')).filter(out=>out.innerText.contains("mutual friends"))){var t=i.innerText;if(Number(t.slice(0,t.length-14))>10){i.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.style.background="#bfd"}}},300)


//	  Bottom Friend Request Canceller (type - to cancel friend requests)
document.addEventListener("keydown",e=>{if(e.key=="-"){document.querySelectorAll('[aria-label="Cancel Request"]')[document.querySelectorAll('[aria-label="Cancel Request"]').length-1].click()}})


//    Change to blocked people and scroll down to text box (keep click middle of screen to have it re-scroll down after loading people)
document.querySelectorAll('[class="_55pi _2agf _4o_4 _4jy0 _4jy3 _517h _51sy _42ft"]')[0].click();
document.querySelectorAll('[class="_54ni __MenuItem"]')[2].click();
setTimeout(function(){document.querySelectorAll('[class="_fn2 _42fu _42ft"]')[0].click()},250);
setInterval(function(){document.querySelectorAll('[class="_58al"]')[1].focus();},250);


//    Instagram get Likes for Photo posts
const lastPerson = new RegExp(prompt("Paste most recent name in sheet"));
var profiles = '';
var length = 0;
var working = 0;
var getNames = true;

var getLikeData = function(name) {
	var array=[
		name.outerText,
		name.href,
		location.href,
	]
	return array.join("\t")+"\n";
}

var profilesClass = "            qF0y9          Igw0E   rBNOH        eGOV_     ybXk5    _4EzTm                                                                                   XfCBB          HVWg4                 ";
var postLikes = document.querySelectorAll('[class="'+profilesClass+'"]');
function getPostLikes() {
	var numNames = 5;
	postLikes = document.querySelectorAll('[class="'+profilesClass+'"]');
	if (postLikes.length < 16) {
		numNames = postLikes.length;
		getNames = false;
	}
	for (j = 0; j < numNames; j++) {
		var object = postLikes[j].children[1].firstElementChild.firstElementChild.firstElementChild.firstElementChild;
		if(lastPerson.test(object.outerText)) { 
			working = 1;
			getNames = false;
		} else if (working == 0){
			profiles+=getLikeData(object);
			length++;
		}
	}
}

function getNumScrolls() {
	var numLikeOptions = 0;
	if (document.querySelectorAll(".zV_Nj").length > 1) {
		numLikeOptions = 1;
	}
	var numLikesString = document.querySelectorAll(".zV_Nj")[numLikeOptions].outerText.split(" others")[0];
	var numLikes = parseInt(numLikesString);
	return Math.floor(numLikes*60/300);
}

function printNames() {
	//profiles = profiles.split(lastPerson)[0];
	const type = 'text/plain';
	const blob = new Blob([profiles], { type });
	const cbi = new ClipboardItem({ [type]: blob });
	navigator.clipboard.write([cbi]);
	console.log(profiles);
	console.log(length);
	//console.log(profiles.match(/\n/g).length);
}

var pxScroll = 305;
function main() {
	if(working == 2){ return; }
	if(working == 1){ working++; }
	if (getNames) {
		var divClass = "            qF0y9          Igw0E     IwRSH      eGOV_        vwCYk                                                                            i0EQd                                   ";
		document.querySelectorAll('[class="'+divClass+'"]')[0].firstElementChild.scrollTop += pxScroll;
		pxScroll = 300;
		setTimeout(() => {getPostLikes();}, 300);
	} else {
		printNames();
	}
}

var numScrolls = getNumScrolls();
for (i = 0; i < numScrolls; i++) {
	setTimeout(function(){
		main();
	}, i * 400);
}
